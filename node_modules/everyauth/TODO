Dynamic redirection.

Write tests.
- Facebook Test Users
  - http://developers.facebook.com/docs/test_users/
  - http://developers.facebook.com/docs/authentication/#applogin

Add
- Yammer and PayPal (https://www.x.com/community/ppx/authentication ; https://www.x.com/community/ppx/permissions )

What would be ideal for the password module:
- Configure login type as email and/or login
- What about using email, login, and/or phone number as the login field?
- Auto-populate email and name via Twitter or Facebook
- Add additional fields to schema via mongoose-auth, and auto-configure everything else in everyauth based on that info.
- Add in extra err checking for User.create catching unique login violation
- Use ajax response instead of redirect

More idiomatic registration validation -- e.g.,

    everyauth.password
      .validate( 'fieldName', validatorFn, 'error message' );

User getters in views (e.g., everyauth.password.postLoginPath())

Add return this.async( function (callback, breakTo) {
});
as an alternative to working with Promises

Find better way to implement access to current sequence's values inside a step block -- e.g., validateRegistration needs to use req and res if it does breakTo 'registrationError'


Try incorporating `if` semantics
  if('conditionAlias')
  
  conditionAlias( function () {
    conditionAlias.true(arg1, arg2);
    conditionAlias.false(arg1, arg2);
  });

Handle facebook's potential 400 response

Add in this._super access for steps

Replace old incomplete step deinition check with newer introspection code
 (and make sure it's lazy)

Add in ability to unauth a paritcular 3rd party provider.
    req.logout('facebook');

What about failed password login

What to do when auth is revoked?
1. Detection
2. Response

Add in ability to make configurables "required" or "optional", and notify the developer if they forgot to configure something required


ea.fb.man should include
  - Description
  - Instructions

ea.fb.instructions; // Prints out what needs to be configured

Instructions should include
  - Template of minimum things that must be added
  - Other configuration options
  - Other steps that you can over-ride per route


Improve introspection tools
ea.fb.get.authAlias.steps.optional


Add in ability for step to be optional

With `step` method, use opts (e.g., for ordering information {before: 'otherStepName'})

Add default views and paths for password auth


with nice helpers like getLoginPath and postLoginPath
    everyauth.password
      .viewhelper('getLoginPath')
      .viewhelper('postLoginPath')

Make some steps optional


Remove async req decoration stuff.

Add in req.user and everyauth.user dynamic helper

Allow OAuth2 scope to be dynamically set via a function (vs just a string)

Make password's authenticate configurable (so you can choose
your password strategy)

Document convertErr (when making your own modules)

Document hidden last step arg `data`

Make express decoration part of the middleware (Is this possible?)
  - After looking at connect source, I don't think this is possible

Next plugins to write:
- Beta invitation
- rememberMeSessions
- passwordRecovery
- registrationConfirmation
- failedLoginLockout
- Track login activity
- Timeouts to logout a user who has not been active

Next Providers to Write:
- Instapaper
- Meetup
- 37signals ID
- Bit.ly
- Vimeo
- YouTube
- SoundCloud
- OpenID (Google Apps)
- LDAP
- Flickr
- Twitter OAuth 2
  - https://gist.github.com/870685/62a029ffdbaea7a6e1f5d835d36b8e95a391921f
  - http://groups.google.com/group/twitter-development-talk/browse_thread/thread/abed22b1e31cef56/95ab8fb0930a8679?lnk=raot&pli=1



Document in README

- How to specify timeout at module and step level
- How to specify error handling per auth module via convertErr
